<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:GraphCanvas.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:infrastructure="using:GraphCanvas.Infrastructure"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="GraphCanvas.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Width="800" Height="450"
        Title="GraphCanvas">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_New..." Click="MenuNew_Clicked" HotKey="Ctrl+N"/>
                <MenuItem Header="_Open..." Click="MenuOpen_Clicked" HotKey="Ctrl+O"/>
                <MenuItem Header="_Save..." Click="MenuSave_Clicked" HotKey="Ctrl+S"/>
                <Separator/>
                <MenuItem Header="_Exit"  Click="MenuItem_OnExit" HotKey="Ctrl+X"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="ToDo"/>
                <MenuItem Header="ToDo"/>
            </MenuItem>
        </Menu>
        
        <Panel DockPanel.Dock="Left">
        <ItemsControl ItemsSource="{Binding EdgeList}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Line StartPoint="{Binding StartVertex.Position, Converter={x:Static infrastructure:PositionConverter.Instance}}" 
                          EndPoint="{Binding EndVertex.Position, Converter={x:Static infrastructure:PositionConverter.Instance}}" 
                          RenderTransformOrigin="0.5, 0.5"
                          Stroke="Gray" StrokeThickness="2">
                    </Line>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        
        <ItemsControl ItemsSource="{Binding VertexList}">
    
        <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
                <Canvas />
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
    
        <ItemsControl.ItemTemplate>
            <DataTemplate>
                <Panel
                    Canvas.Left="{Binding Position.X}"
                    Canvas.Top="{Binding Position.Y}"
                    PointerPressed="OnVertexPointerPressed"
                    PointerMoved="OnVertexPointerMoved"
                    PointerReleased="OnVertexPointerReleased"
                    >
                    <Ellipse Width="32" Height="32"
                             VerticalAlignment="Center" HorizontalAlignment="Center"
                             RenderTransformOrigin="0.5,0.5"
                             Fill="{Binding Selected, Converter={x:Static infrastructure:BoolToColorConverter.Instance}}"
                             Stroke="Gray" StrokeThickness="2"
                    >
                    </Ellipse>
                    <TextBlock Text="{Binding Name}" 
                               Foreground="LightGray" 
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                    <Panel.RenderTransform>
                        <TranslateTransform
                            X="{Binding Position.X}"
                            Y="{Binding Position.Y}"/>
                    </Panel.RenderTransform>
                </Panel>
            </DataTemplate>
        </ItemsControl.ItemTemplate>
    
    </ItemsControl>
    </Panel>
    </DockPanel>
</Window>
